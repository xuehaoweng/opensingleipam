# Generated by Django 4.0.8 on 2023-05-11 16:09

import cidrfield.models
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='TagsModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bg_color', models.CharField(blank=True, max_length=100, verbose_name='bg_color')),
                ('compress', models.CharField(blank=True, max_length=100, verbose_name='compress')),
                ('fg_color', models.CharField(blank=True, max_length=100, verbose_name='fgcolor')),
                ('locked', models.CharField(blank=True, max_length=100, verbose_name='locked')),
                ('type', models.CharField(blank=True, max_length=100, verbose_name='type')),
                ('show_tag', models.BooleanField(verbose_name='showtag')),
            ],
            options={
                'verbose_name': '网络地址标签表',
                'verbose_name_plural': '网络地址标签表',
                'db_table': 'ipam_tags',
            },
        ),
        migrations.CreateModel(
            name='Subnet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subnet_id', models.IntegerField(default=0, verbose_name='网段ID')),
                ('name', models.CharField(db_index=True, max_length=100, verbose_name='名称')),
                ('subnet', cidrfield.models.IPNetworkField(db_index=True, unique=True, verbose_name='子网段')),
                ('mask', models.IntegerField(default=24, verbose_name='掩码')),
                ('freehosts_percent', models.FloatField(blank=True, default=0, null=True, verbose_name='空闲率')),
                ('description', models.CharField(blank=True, max_length=300, null=True, verbose_name='描述')),
                ('master_subnet', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='child_subnet_set', to='open_ipam.subnet', verbose_name='上一级子网段')),
            ],
            options={
                'verbose_name': '子网网段表',
                'verbose_name_plural': '子网网段表',
                'db_table': 'ipam_subnet',
                'ordering': ['subnet'],
            },
        ),
        migrations.CreateModel(
            name='IpAddress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip_address', models.GenericIPAddressField(unique=True, verbose_name='IP地址')),
                ('description', models.CharField(blank=True, max_length=500, null=True, verbose_name='描述信息')),
                ('tag', models.PositiveSmallIntegerField(choices=[(1, '空闲'), (2, '已分配已使用'), (3, '保留'), (4, '未分配已使用'), (6, '已分配未使用'), (7, '自定义空闲')], default=1, verbose_name='状态标签')),
                ('editDate', models.DateField(auto_now=True, null=True, verbose_name='编辑时间')),
                ('lastScan', models.DateField(auto_now=True, null=True)),
                ('lastDiscovery', models.DateField(auto_now=True, null=True)),
                ('lastOnlineTime', models.DateField(auto_now=True, null=True, verbose_name='最近在线时间')),
                ('subnet', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='open_ipam.subnet', verbose_name='归属子网段')),
            ],
            options={
                'verbose_name': '网络地址表',
                'verbose_name_plural': '网络地址表',
                'db_table': 'ipam_ip_address',
                'ordering': ['ip_address'],
            },
        ),
        migrations.AddIndex(
            model_name='subnet',
            index=models.Index(fields=['subnet'], name='subnet_idx'),
        ),
        migrations.AddIndex(
            model_name='subnet',
            index=models.Index(fields=['name'], name='name'),
        ),
        migrations.AddIndex(
            model_name='ipaddress',
            index=models.Index(fields=['ip_address'], name='ipam_ip_add_ip_addr_20df1b_idx'),
        ),
        migrations.AddIndex(
            model_name='ipaddress',
            index=models.Index(fields=['description'], name='ipam_ip_add_descrip_ad47a9_idx'),
        ),
        migrations.AddIndex(
            model_name='ipaddress',
            index=models.Index(fields=['lastOnlineTime'], name='ipam_ip_add_lastOnl_d2352c_idx'),
        ),
    ]
